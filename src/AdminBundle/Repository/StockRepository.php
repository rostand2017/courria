<?php

namespace AdminBundle\Repository;

/**
 * ClientRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class StockRepository extends \Doctrine\ORM\EntityRepository
{
    public function countByDateAndName($begin=null, $end=null, $search=null){
        $sql="SELECT COUNT(*) FROM stock s INNER JOIN Produit p ON s.produit = p.id";

        if($search && !$begin)
            $sql .= " WHERE p.nom LIKE :search OR p.description LIKE :search ";
        else if($search && $begin)
            $sql .= " WHERE p.createdat BETWEEN :begin AND :end AND (p.nom LIKE :search OR p.description LIKE :search)";
        else if(!$search && $begin)
            $sql .= " WHERE p.createdat BETWEEN :begin AND :end ";

        $sql .= " ORDER BY p.createdat DESC";
        //$sql .= " LIMIT :limit,:offset";

        $state = $this->_em->getConnection()->prepare($sql);
        if($begin) {
            $begin = date_format( new \DateTime($begin), "y-m-d");
            $end = date_format( new \DateTime($end), "y-m-d");
            $state->bindValue(":begin", $begin, \PDO::PARAM_STR);
            $state->bindValue(":end", $end, \PDO::PARAM_STR);
        }
        if($search) {
            $state->bindValue(":search", $search, \PDO::PARAM_STR);
        }
        $state->execute();
        return $state->fetch(\PDO::FETCH_COLUMN);
    }

    public function getByDateAndName($limit, $offset, $begin=null, $end=null, $search=null){
        $offset = (int) $offset;
        $limit = (int) ($limit - 1) *$offset;
        $sql="SELECT s.id, s.createdat, s.quantite FROM stock s INNER JOIN produit p ON s.produit = p.id";

        if($search && !$begin)
            $sql .= " WHERE p.nom LIKE :search OR p.description LIKE :search ";
        else if($search && $begin)
            $sql .= " WHERE p.createdat BETWEEN :begin AND :end AND (p.nom LIKE :search OR p.description LIKE :search )";
        else if(!$search && $begin)
            $sql .= " WHERE p.createdat BETWEEN :begin AND :end ";

        $sql .= " ORDER BY p.createdat DESC";
        $sql .= " LIMIT :limit,:offset";

        $state = $this->_em->getConnection()->prepare($sql);
        if($begin){
            $begin = date_format( new \DateTime($begin), "y-m-d");
            $end = date_format( new \DateTime($end), "y-m-d");
            $state->bindValue(":begin", $begin,\PDO::PARAM_STR);
            $state->bindValue(":end", $end,\PDO::PARAM_STR);
        }
        if($search) {
            $search = '%'.$search.'%';
            $state->bindValue(":search", $search, \PDO::PARAM_STR);
        }

        $state->bindValue(":limit", $limit,\PDO::PARAM_INT);
        $state->bindValue(":offset", $offset,\PDO::PARAM_INT);
        $state->execute();
        return $state->fetchAll();
    }

    public function getTodayStock(){
        $sql="SELECT COUNT(*) AS total FROM stock s WHERE DATE(s.createdat) = CURRENT_DATE";
        $state = $this->_em->getConnection()->prepare($sql);
        $state->execute();
        return $state->fetchColumn();
    }

    public function getStockProduct(){
        $sql="SELECT s.id, s.createdat, s.produit, s.quantite, p.nom, p.description FROM stock s INNER JOIN produit p ON s.produit = p.id LIMIT 0,10 ";
        $state = $this->_em->getConnection()->prepare($sql);
        $state->execute();
        return $state->fetchAll();
    }
}
